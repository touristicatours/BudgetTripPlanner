"use client";
import { useEffect, useState } from "react";
import { useParams } from "next/navigation";
import html2canvas from "html2canvas";
import jsPDF from "jspdf";

interface TripData {
  id: string;
  form: {
    destination: string;
    startDate: string;
    endDate: string;
    travelers: number;
    budget: number;
    currency: string;
  };
  itinerary: any[];
}

export default function ExportPage() {
  const params = useParams();
  const [trip, setTrip] = useState<TripData | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    async function fetchTrip() {
      try {
        const response = await fetch(`/api/trips/db/${params.id}`);
        if (response.ok) {
          const data = await response.json();
          setTrip(data);
        }
      } catch (error) {
        console.error("Failed to fetch trip:", error);
      } finally {
        setLoading(false);
      }
    }

    if (params.id) {
      fetchTrip();
    }
  }, [params.id]);

  async function download() {
    const el = document.getElementById("print-area");
    if (!el) return;
    const canvas = await html2canvas(el);
    const img = canvas.toDataURL("image/png");
    const pdf = new jsPDF({ unit:"pt", format:"a4" });
    const w = pdf.internal.pageSize.getWidth();
    const h = (canvas.height * w) / canvas.width;
    pdf.addImage(img, "PNG", 0, 0, w, h);
    pdf.save(`${trip?.form.destination || 'trip'}.pdf`);
  }

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600 mx-auto"></div>
          <p className="mt-2 text-gray-600">Loading trip...</p>
        </div>
      </div>
    );
  }

  if (!trip) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <h1 className="text-2xl font-semibold text-gray-900 mb-2">Trip Not Found</h1>
          <p className="text-gray-600">This trip may have been deleted or you don't have access.</p>
        </div>
      </div>
    );
  }

  return (
    <div className="p-6 space-y-4">
      <div className="flex justify-between items-center">
        <h1 className="text-2xl font-semibold">Export Trip</h1>
        <button 
          onClick={download} 
          className="px-4 py-2 rounded bg-indigo-600 text-white hover:bg-indigo-700"
        >
          Download PDF
        </button>
      </div>
      
      <div id="print-area" className="bg-white text-black p-8 rounded shadow max-w-4xl mx-auto">
        <div className="text-center mb-8">
          <h1 className="text-3xl font-bold mb-2">{trip.form.destination}</h1>
          <p className="text-lg text-gray-600">
            {new Date(trip.form.startDate).toLocaleDateString()} - {new Date(trip.form.endDate).toLocaleDateString()}
          </p>
          <p className="text-gray-500">
            {trip.form.travelers} traveler{trip.form.travelers > 1 ? "s" : ""} â€¢ Budget: {trip.form.budget} {trip.form.currency}
          </p>
        </div>

        <div className="space-y-6">
          {trip.itinerary?.map((day: any, index: number) => (
            <div key={index} className="border-t pt-6">
              <h3 className="text-xl font-semibold mb-3">{day.title}</h3>
              <div className="space-y-3">
                {day.activities?.map((activity: any, actIndex: number) => (
                  <div key={actIndex} className="flex items-start gap-4 p-3 bg-gray-50 rounded-lg">
                    <span className="text-sm text-gray-500 w-16 flex-shrink-0">
                      {activity.timeOfDay || ""}
                    </span>
                    <div className="flex-1">
                      <p className="font-medium">{activity.name}</p>
                      {activity.note && (
                        <p className="text-sm text-gray-600 mt-1">{activity.note}</p>
                      )}
                    </div>
                  </div>
                ))}
              </div>
            </div>
          ))}
        </div>

        <div className="mt-8 pt-6 border-t text-center text-gray-500">
          <p>Generated by TripWeaver</p>
          <p className="text-sm">{new Date().toLocaleDateString()}</p>
        </div>
      </div>
    </div>
  );
}
